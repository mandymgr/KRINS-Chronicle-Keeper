# Revolutionary Trading System PostgreSQL Configuration
# Optimized for 1 million transactions per second with real-time replication

#------------------------------------------------------------------------------
# CONNECTIONS AND AUTHENTICATION
#------------------------------------------------------------------------------

listen_addresses = '*'
port = 5432
max_connections = 1000
superuser_reserved_connections = 3

# Connection pooling optimization
tcp_keepalives_idle = 600
tcp_keepalives_interval = 30
tcp_keepalives_count = 3

#------------------------------------------------------------------------------
# RESOURCE USAGE (except WAL)
#------------------------------------------------------------------------------

# Memory settings optimized for high-performance trading
shared_buffers = 8GB                    # 25% of RAM for 32GB system
huge_pages = try
temp_buffers = 32MB
max_prepared_transactions = 100

# Work memory for sorting and hashing
work_mem = 16MB                         # Per operation
maintenance_work_mem = 1GB              # For maintenance operations
autovacuum_work_mem = 1GB              # For autovacuum

# Background writer for continuous writes
bgwriter_delay = 10ms
bgwriter_lru_maxpages = 1000
bgwriter_lru_multiplier = 10.0
bgwriter_flush_after = 512kB

# Effective cache size (total system cache)
effective_cache_size = 24GB            # 75% of RAM

#------------------------------------------------------------------------------
# WRITE AHEAD LOG (WAL) - Critical for replication
#------------------------------------------------------------------------------

wal_level = logical                    # Required for logical replication
fsync = on                            # Ensure data safety
synchronous_commit = on               # Wait for WAL write
wal_sync_method = fdatasync

# WAL file management
wal_buffers = 64MB                    # Large WAL buffer for high throughput
wal_writer_delay = 10ms               # Frequent WAL writes
wal_writer_flush_after = 1MB

# Archive settings for point-in-time recovery
archive_mode = on
archive_command = '/bin/true'         # Placeholder - replace with actual command
archive_timeout = 300                 # Force archive every 5 minutes

# Checkpoints for recovery performance
checkpoint_timeout = 5min
checkpoint_completion_target = 0.9
checkpoint_flush_after = 256kB
checkpoint_warning = 30s

# WAL segment size and retention
min_wal_size = 2GB
max_wal_size = 8GB

#------------------------------------------------------------------------------
# REPLICATION - Real-time streaming replication
#------------------------------------------------------------------------------

# Primary server settings
max_wal_senders = 10                  # Maximum concurrent WAL senders
wal_keep_size = 2GB                   # Keep WAL files for replicas
max_replication_slots = 10            # Logical replication slots

# Standby server settings (for replicas)
hot_standby = on                      # Allow read queries on standby
max_standby_streaming_delay = 30s     # Max delay before canceling queries
hot_standby_feedback = on             # Send feedback to primary

# Synchronous replication for critical data
synchronous_standby_names = ''        # Set to replica names for sync replication

#------------------------------------------------------------------------------
# QUERY TUNING
#------------------------------------------------------------------------------

# Query planning
default_statistics_target = 100       # Better statistics for query planning
constraint_exclusion = partition      # Enable constraint exclusion
cpu_tuple_cost = 0.01                # Adjust for modern hardware
cpu_index_tuple_cost = 0.005
cpu_operator_cost = 0.0025
random_page_cost = 1.1                # SSD storage
seq_page_cost = 1.0
effective_io_concurrency = 200        # High for NVMe SSD

# Parallel query execution
max_parallel_workers_per_gather = 4
max_parallel_maintenance_workers = 4
max_parallel_workers = 16
parallel_tuple_cost = 0.1
parallel_setup_cost = 1000.0

#------------------------------------------------------------------------------
# ERROR REPORTING AND LOGGING
#------------------------------------------------------------------------------

# Logging for performance monitoring
log_destination = 'stderr,csvlog'
logging_collector = on
log_directory = 'log'
log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
log_rotation_age = 1d
log_rotation_size = 100MB
log_truncate_on_rotation = on

# What to log
log_min_duration_statement = 10ms     # Log slow queries
log_checkpoints = on
log_connections = on
log_disconnections = on
log_lock_waits = on
log_temp_files = 10MB
log_autovacuum_min_duration = 0
log_error_verbosity = default

# Log statement types
log_statement = 'none'                # Set to 'all' for debugging
log_line_prefix = '%t [%p-%l] %q%u@%d '

# CSV logging for analysis
log_destination = 'csvlog'

#------------------------------------------------------------------------------
# RUNTIME STATISTICS
#------------------------------------------------------------------------------

# Track activities for monitoring
track_activities = on
track_counts = on
track_io_timing = on
track_functions = all
stats_temp_directory = 'pg_stat_tmp'

# Query statistics extension
shared_preload_libraries = 'timescaledb,pg_stat_statements'
pg_stat_statements.max = 10000
pg_stat_statements.track = all
pg_stat_statements.track_utility = on
pg_stat_statements.save = on

#------------------------------------------------------------------------------
# AUTOVACUUM - Critical for high-write workloads
#------------------------------------------------------------------------------

autovacuum = on
log_autovacuum_min_duration = 0
autovacuum_max_workers = 6
autovacuum_naptime = 15s              # Check every 15 seconds
autovacuum_vacuum_threshold = 50
autovacuum_vacuum_scale_factor = 0.1  # More aggressive vacuuming
autovacuum_analyze_threshold = 50
autovacuum_analyze_scale_factor = 0.05 # More frequent analysis

# Vacuum cost settings for performance
autovacuum_vacuum_cost_delay = 2ms    # Short delay for continuous operation
autovacuum_vacuum_cost_limit = 10000  # High limit for fast vacuum

#------------------------------------------------------------------------------
# CLIENT CONNECTION DEFAULTS
#------------------------------------------------------------------------------

# Timezone and locale
timezone = 'UTC'
log_timezone = 'UTC'
datestyle = 'iso, mdy'
lc_messages = 'en_US.utf8'
lc_monetary = 'en_US.utf8'
lc_numeric = 'en_US.utf8'
lc_time = 'en_US.utf8'
default_text_search_config = 'pg_catalog.english'

# Performance-related defaults
statement_timeout = 30s               # Prevent runaway queries
lock_timeout = 10s                    # Prevent lock waits
idle_in_transaction_session_timeout = 60s # Clean up idle transactions

#------------------------------------------------------------------------------
# LOCK MANAGEMENT
#------------------------------------------------------------------------------

deadlock_timeout = 1s
max_locks_per_transaction = 64
max_pred_locks_per_transaction = 64

#------------------------------------------------------------------------------
# VERSION/PLATFORM COMPATIBILITY
#------------------------------------------------------------------------------

# Enable advanced features
default_table_access_method = heap
row_security = on

#------------------------------------------------------------------------------
# TIMESCALEDB SPECIFIC SETTINGS
#------------------------------------------------------------------------------

# TimescaleDB configuration for time-series data
timescaledb.max_background_workers = 16
timescaledb.last_updated_verbose = off
timescaledb.telemetry_level = off

# Memory settings for TimescaleDB
timescaledb.max_open_chunks_per_insert = 64
timescaledb.max_cached_chunks_per_hypertable = 100

#------------------------------------------------------------------------------
# TRADING SYSTEM SPECIFIC OPTIMIZATIONS
#------------------------------------------------------------------------------

# JIT compilation for complex queries (PostgreSQL 11+)
jit = on
jit_above_cost = 100000
jit_inline_above_cost = 500000
jit_optimize_above_cost = 500000

# Aggressive settings for high-frequency trading
commit_delay = 0                      # No artificial delay
commit_siblings = 0
wal_compression = on                  # Compress WAL for network efficiency
wal_init_zero = off                   # Skip zeroing for performance
wal_recycle = on                      # Recycle WAL files

# Custom parameters for monitoring
custom_variable_classes = 'trading'