{
  "projectDescription": "Real-time chat application with WebSocket messaging, user authentication, file upload, and comprehensive testing suite",
  "projectType": "web-app",
  "aiTeamAssignment": {
    "frontend": {
      "ai": "claude",
      "specialization": "@frontend",
      "patterns": [],
      "instructions": "Create modern, responsive frontend using React with TypeScript. Focus on user experience and performance.",
      "codeExamples": {},
      "antiPatterns": []
    },
    "backend": {
      "ai": "gpt-4",
      "specialization": "@backend",
      "patterns": [],
      "instructions": "Build secure, scalable backend API. Implement proper authentication and data validation.",
      "codeExamples": {},
      "antiPatterns": []
    },
    "devops": {
      "ai": "gemini",
      "specialization": "@deployment",
      "patterns": [],
      "instructions": "Setup deployment pipeline and monitoring. Ensure security and scalability.",
      "codeExamples": {},
      "antiPatterns": []
    },
    "testing": {
      "ai": "claude",
      "specialization": "@testing",
      "patterns": [],
      "instructions": "Create comprehensive test suite. Ensure quality gates are met.",
      "codeExamples": {},
      "antiPatterns": []
    }
  },
  "sharedGuidelines": [],
  "qualityGates": [
    "All code must be syntactically correct",
    "Tests must pass before deployment",
    "Security scanning must pass",
    "Performance benchmarks must be met",
    "ADR reference required for major changes",
    "Code examples must be idiomatic for each language"
  ],
  "documentationRequirements": [
    "Generate ADR for all architectural decisions",
    "Document API endpoints with examples",
    "Create runbook for deployment and operations",
    "Include performance and security considerations",
    "Update pattern cards with lessons learned"
  ]
}